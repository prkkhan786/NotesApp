{"version":3,"sources":["components/Addnoteform.jsx","components/Calender.jsx","components/TodoList.jsx","common/commonutills.js","App.js","serviceWorker.js","index.js"],"names":["Addnoteform","props","type","title","content","onTitlechange","onContentchange","onSavehandler","ondiscartHandler","className","onSubmit","htmlFor","id","value","onChange","rows","style","display","justifyContent","disabled","onClick","e","MyCalender","date","TodoList","items","onEdithandler","onDeleteHandler","length","position","top","Fragment","width","map","item","i","key","focus","marginLeft","height","bottom","icons","edit","sanitizeInput","input","console","log","App","alert","useAlert","useState","setItems","setTitle","setContent","Date","setdate","AllNotes","setAllnotes","editTitle","setEditTitle","editContent","setEditContent","currentSelected","setCurrentSelected","classname","setClassname","useEffect","cacheData","localStorage","getItem","notesobject","JSON","parse","ondateChange","Notesdata","getDate","toString","myRef","useRef","executeScroll","ref","window","scrollTo","current","offsetTop","borderBottom","marginBottom","overflow","newArray","filter","setItem","stringify","target","preventDefault","newItem","now","toDateString","newitems","push","show","selectedItem","find","ele","index","indexOf","newitem","Boolean","location","hostname","match","options","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sQAEe,SAASA,EAAYC,GAAQ,IAExCC,EAOED,EAPFC,KACAC,EAMEF,EANFE,MACAC,EAKEH,EALFG,QACAC,EAIEJ,EAJFI,cACAC,EAGEL,EAHFK,gBACAC,EAEEN,EAFFM,cACAC,EACEP,EADFO,iBAGF,OACE,6BACE,wBAAIC,UAAU,OAAd,IAAsBP,GACtB,0BAAMQ,SAAUH,GACd,yBAAKE,UAAU,cACb,2BAAOE,QAAQ,aAAf,SACA,2BACET,KAAK,OACLO,UAAU,eACVG,GAAG,YACHC,MAAOV,EACPW,SAAUT,KAId,yBAAKI,UAAU,cACb,2BAAOE,QAAQ,eAAf,WACA,8BACEF,UAAU,eACVG,GAAG,8BACHG,KAAK,IACLF,MAAOT,EACPU,SAAUR,KAGd,yBACEG,UAAU,aACVO,MAAO,CAAEC,QAAS,OAAQC,eAAgB,kBAE1C,4BAAQhB,KAAK,SAASO,UAAU,kBAAkBU,UAAWhB,GAA7D,QAGA,4BACEgB,UAAWhB,EACXM,UAAU,iBACVW,QAAS,SAACC,GAAD,OAAOb,EAAiBa,KAHnC,c,YC1CK,SAASC,EAAWrB,GAAQ,IACjCsB,EAAmBtB,EAAnBsB,KAAMT,EAAab,EAAba,SACd,OACE,6BACE,kBAAC,IAAD,CAAUA,SAAUA,EAAUD,MAAOU,K,oBCJ5B,SAASC,EAASvB,GAAQ,IAAD,OAC9BwB,EAA0CxB,EAA1CwB,MAAOC,EAAmCzB,EAAnCyB,cAAeC,EAAoB1B,EAApB0B,gBAC9B,OAAqB,IAAjBF,EAAMG,OAEN,yBAAKnB,UAAU,MAAMO,MAAO,CAAEa,SAAU,WAAYC,IAAK,QAAzD,aAMF,kBAAC,IAAMC,SAAP,KAEE,wBAAItB,UAAU,OAAd,SACA,2BAAOA,UAAU,iBAAiBO,MAAO,CAAEgB,MAAO,SAChD,+BACE,4BACE,oCACA,qCACA,oCACA,oCACA,wCAGJ,+BACGP,EAAMQ,KAAI,SAACC,EAAMC,GAAP,OACT,wBAAIC,IAAKF,EAAKtB,IACZ,4BAAKuB,EAAI,GACT,4BAAKD,EAAK/B,OACV,4BAAK+B,EAAKX,MACV,4BACE,4BACEd,UAAU,0BACVW,QAAS,kBAAMM,EAAcQ,IAAS,EAAKG,SAC3CrB,MAAO,CAAEsB,WAAY,KAAMC,OAAQ,QACnCpC,MAAM,aAEL,IACD,0BAAMa,MAAO,CAAEa,SAAU,WAAYW,OAAQ,QAC1CC,IAAMC,QAKb,4BACE,4BACEjC,UAAU,yBACVW,QAAS,kBAAMO,EAAgBO,IAC/BlB,MAAO,CAAEsB,WAAY,KAAMC,OAAQ,QACnCpC,MAAM,eAEL,IACD,0BAAMa,MAAO,CAAEa,SAAU,WAAYW,OAAQ,QAC1CC,IAAMC,eCvDpB,SAASC,EAAcC,GAI5B,OADAC,QAAQC,IAAIF,GACE,KAAVA,E,WCmMSG,MA/Lf,WACE,IAAMC,EAAQC,cADD,EAIaC,mBAAS,IAJtB,mBAINzB,EAJM,KAIC0B,EAJD,OAKaD,mBAAS,IALtB,mBAKN/C,EALM,KAKCiD,EALD,OAMiBF,mBAAS,IAN1B,mBAMN9C,EANM,KAMGiD,EANH,OAOWH,mBAAS,IAAII,MAPxB,mBAON/B,EAPM,KAOAgC,EAPA,OAQmBL,mBAAS,IAR5B,mBAQNM,EARM,KAQIC,EARJ,OASqBP,mBAAS,IAT9B,mBASNQ,EATM,KASKC,EATL,OAUyBT,mBAAS,IAVlC,mBAUNU,EAVM,KAUOC,EAVP,OAWiCX,mBAAS,IAX1C,mBAWNY,EAXM,KAWWC,EAXX,OAYqBb,mBAAS,oBAZ9B,mBAYNc,EAZM,KAYKC,EAZL,KAgBbC,qBAAU,WACRrB,QAAQC,IAAI,eAEZ,IAAMqB,EAAYC,aAAaC,QAAQ,YACvC,GAAIF,EAAW,CACb,IAAMG,EAAcC,KAAKC,MAAML,GAC/BV,EAAYa,MAEb,IAIHJ,qBAAU,WACRO,EAAa,IAAInB,QAEhB,CAACE,IAEJ,IAAMiB,EAAe,SAAClD,GACpBsB,QAAQC,IAAI,mBAEZS,EAAQhC,GAGR,IAAMmD,EAAYlB,EAASjC,EAAKoD,UAAUC,YAGxCzB,EADEuB,GAEY,KAkGZG,EAAQC,iBAAO,MACfC,EAAgB,kBAFDC,EAEmBH,EAFXI,OAAOC,SAAS,EAAGF,EAAIG,QAAQC,WAAxC,IAACJ,GAGrB,OACE,yBAAKvE,UAAU,aACb,yBAAKO,MAAO,CAAEqE,aAAc,kBAAmBC,aAAc,SAC3D,wBAAI7E,UAAU,OAAd,cAEF,yBAAKA,UAAU,MAAMO,MAAO,CAAEuB,OAAQ,QACpC,yBAAK9B,UAAU,YACb,kBAACa,EAAD,CAAYC,KAAMA,EAAMT,SAAU2D,KAEpC,yBACEhE,UAAU,eACVO,MAAO,CAAEuB,OAAQ,OAAQgD,SAAU,WAEnC,kBAAC/D,EAAD,CACEC,MAAOA,EACPC,cApCV,SAAuBQ,GACrB+B,EAAa,YADc,IAEnB7D,EAAmB8B,EAAnB9B,QAASD,EAAU+B,EAAV/B,MACjB0D,EAAezD,GACfuD,EAAaxD,GACb4D,EAAmB7B,GACnB6C,KA+BQpD,gBA5BV,SAAyBO,GACvB,IAAMsD,EAAW/D,EAAMgE,QAAO,SAACtD,GAAD,OAAOD,EAAKtB,KAAOuB,EAAEvB,MACnDuC,EAASqC,GACT,IAAIpD,EAAMb,EAAKoD,UAAUC,WACzBpB,EAASpB,GAAOoD,EAChB/B,EAAYD,GACZY,aAAasB,QAAQ,WAAYnB,KAAKoB,UAAUnC,SA2B9C,yBAAK/C,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACT,EAAD,CACEE,KAAK,eACLC,MAAOA,EACPC,QAASA,EACTC,cA3HV,SAAuBgB,GACrB+B,EAAS/B,EAAEuE,OAAO/E,QA2HVP,gBAxHV,SAAyBe,GACvBgC,EAAWhC,EAAEuE,OAAO/E,QAwHZN,cAnGV,SAAuBc,GACrBA,EAAEwE,iBACF,IAAMC,EAAU,CACdlF,GAAI0C,KAAKyC,MACT5F,MAAOA,EACPC,QAASA,EACTmB,KAAMA,EAAKyE,gBAEb,GAAKrD,EAAcxC,GAAnB,CAIA,IAAI8F,EAAQ,YAAOxE,GACnBwE,EAASC,KAAKJ,GACd3C,EAAS8C,GACT7C,EAAS,IACTC,EAAW,IACX,IAAIjB,EAAMb,EAAKoD,UAAUC,WACzBpB,EAASpB,GAAO6D,EAChBxC,EAAYD,GACZY,aAAasB,QAAQ,WAAYnB,KAAKoB,UAAUnC,SAX9CR,EAAMmD,KAAK,6BA2FL3F,iBAhHV,SAA0Ba,GACxBA,EAAEwE,iBACFzC,EAAS,IACTC,EAAW,QAgHP,yBAAK5C,UAAWuD,EAAWgB,IAAKH,GAC9B,kBAAC7E,EAAD,CACEE,KAAK,YACLC,MAAOuD,EACPtD,QAASwD,EACTvD,cA9HV,SAA2BgB,GACzBsC,EAAatC,EAAEuE,OAAO/E,QA8HdP,gBA5HV,SAA6Be,GAC3BwC,EAAexC,EAAEuE,OAAO/E,QA4HhBN,cAtFV,SAA2Bc,GACzBA,EAAEwE,iBACF,IAAMC,EAAU,CACdlF,GAAIkD,EAAgBlD,GACpBT,MAAOuD,EACPtD,QAASwD,EACTrC,KAAMuC,EAAgBvC,MAGxB,GAAKoB,EAAce,GAAnB,CAIA,IAAM0C,EAAe3E,EAAM4E,MAAK,SAACC,GAAD,OAASA,EAAI1F,KAAOkF,EAAQlF,MACxD2F,EAAQ9E,EAAM+E,QAAQJ,GAC1B3E,EAAM8E,GAAST,EACf,IAAMW,EAAO,YAAOhF,GACpB0B,EAASsD,GACT9C,EAAa,IACbE,EAAe,IACf,IAAIzB,EAAMb,EAAKoD,UAAUC,WACzBpB,EAASpB,GAAOqE,EAChBhD,EAAYD,QAZVR,EAAMmD,KAAK,8BA6EL3F,iBAtHV,SAA8Ba,GAC5BA,EAAEwE,iBACFlC,EAAa,IACbE,EAAe,WCjEC6C,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2D,YCPAC,EAAU,CAEdjF,SAAUkF,IAAUC,cACpBC,QAAS,IACTC,OAAQ,OAERC,WAAYC,IAAYC,OAG1BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,eAAeC,SAAUC,KAAmBZ,GAC1C,kBAAC,EAAD,QAGJa,SAASC,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvF,QAAQuF,MAAMA,EAAMC,c","file":"static/js/main.dde01ac0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Addnoteform(props) {\n  const {\n    type,\n    title,\n    content,\n    onTitlechange,\n    onContentchange,\n    onSavehandler,\n    ondiscartHandler,\n  } = props;\n\n  return (\n    <div>\n      <h1 className=\"App\"> {type}</h1>\n      <form onSubmit={onSavehandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"notetitle\">Title</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"notetitle\"\n            value={title}\n            onChange={onTitlechange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"notecontent\">Content</label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            value={content}\n            onChange={onContentchange}\n          ></textarea>\n        </div>\n        <div\n          className=\"form-group\"\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={!title}>\n            Save\n          </button>\n          <button\n            disabled={!title}\n            className=\"btn btn-danger\"\n            onClick={(e) => ondiscartHandler(e)}\n          >\n            Discard\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Calendar from \"react-calendar\";\n\nexport default function MyCalender(props) {\n  const { date, onChange } = props;\n  return (\n    <div>\n      <Calendar onChange={onChange} value={date} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport icons from \"glyphicons\";\n\nexport default function TodoList(props) {\n  const { items, onEdithandler, onDeleteHandler } = props;\n  if (items.length === 0) {\n    return (\n      <div className=\"App\" style={{ position: \"relative\", top: \"50%\" }}>\n        No Notes.\n      </div>\n    );\n  }\n  return (\n    <React.Fragment>\n      {/* <div style={{ display: \"inline-flex\", marginBottom: \"1%\" }}>Notes </div> */}\n      <h1 className=\"App\">Notes</h1>\n      <table className=\"table sortable\" style={{ width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>S.No</th>\n            <th>Title</th>\n            <th>Date</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item, i) => (\n            <tr key={item.id}>\n              <td>{i + 1}</td>\n              <td>{item.title}</td>\n              <td>{item.date}</td>\n              <td>\n                <button\n                  className=\"btn btn-outline-primary\"\n                  onClick={() => onEdithandler(item) && this.focus()}\n                  style={{ marginLeft: \"2%\", height: \"22px\" }}\n                  title=\"Edit Note\"\n                >\n                  {\" \"}\n                  <span style={{ position: \"relative\", bottom: \"8px\" }}>\n                    {icons.edit}\n                  </span>\n                </button>\n              </td>\n\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => onDeleteHandler(item)}\n                  style={{ marginLeft: \"2%\", height: \"22px\" }}\n                  title=\"Delete Note\"\n                >\n                  {\" \"}\n                  <span style={{ position: \"relative\", bottom: \"8px\" }}>\n                    {icons.edit}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n}\n","export function sanitizeInput(input) {\n  //need to add more sanitization later\n\n  console.log(input);\n  if (input === \"\") {\n    return false;\n  }\n  return true;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport Addnoteform from \"./components/Addnoteform\";\nimport MyCalender from \"./components/Calender\";\nimport TodoList from \"./components/TodoList\";\nimport { sanitizeInput } from \"./common/commonutills\";\nimport { useAlert } from \"react-alert\";\n\nfunction App() {\n  const alert = useAlert();\n  //****************************  states  ******************************\n\n  const [items, setItems] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [date, setdate] = useState(new Date());\n  const [AllNotes, setAllnotes] = useState({});\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editContent, setEditContent] = useState(\"\");\n  const [currentSelected, setCurrentSelected] = useState(\"\");\n  const [classname, setClassname] = useState(\"col-sm-6 disable\");\n\n  //****************************  handlers  ******************************\n\n  useEffect(() => {\n    console.log(\"use effect \");\n\n    const cacheData = localStorage.getItem(\"allnotes\");\n    if (cacheData) {\n      const notesobject = JSON.parse(cacheData);\n      setAllnotes(notesobject);\n    }\n  }, []);\n\n  // only call this if Allnotes changes\n\n  useEffect(() => {\n    ondateChange(new Date());\n    // eslint-disable-next-line\n  }, [AllNotes]);\n\n  const ondateChange = (date) => {\n    console.log(\"on change date \");\n    // console.log(\"date is \", date.toDateString());\n    setdate(date);\n\n    // console.log(\"all notes ->\", AllNotes);\n    const Notesdata = AllNotes[date.getDate().toString()];\n    // console.log(\"notes data\", Notesdata);\n    if (Notesdata) {\n      setItems(Notesdata);\n    } else setItems([]);\n  };\n  //****************************  on change handlers  ******************************\n\n  function onTitlechange(e) {\n    setTitle(e.target.value);\n  }\n\n  function onContentchange(e) {\n    setContent(e.target.value);\n  }\n\n  function onEditTitleChange(e) {\n    setEditTitle(e.target.value);\n  }\n  function onEditContentChange(e) {\n    setEditContent(e.target.value);\n  }\n  function ondiscartHandler(e) {\n    e.preventDefault();\n    setTitle(\"\");\n    setContent(\"\");\n  }\n  function onEditDiscartHandler(e) {\n    e.preventDefault();\n    setEditTitle(\"\");\n    setEditContent(\"\");\n  }\n  //****************************  on save and edit note handlers  ******************************\n\n  function onSaveHandler(e) {\n    e.preventDefault();\n    const newItem = {\n      id: Date.now(),\n      title: title,\n      content: content,\n      date: date.toDateString(),\n    };\n    if (!sanitizeInput(title)) {\n      alert.show(\"Please enter note title \");\n      return;\n    }\n    var newitems = [...items];\n    newitems.push(newItem);\n    setItems(newitems);\n    setTitle(\"\");\n    setContent(\"\");\n    var key = date.getDate().toString();\n    AllNotes[key] = newitems;\n    setAllnotes(AllNotes);\n    localStorage.setItem(\"allnotes\", JSON.stringify(AllNotes));\n    // console.log(storage);\n  }\n\n  function onEditSavehandler(e) {\n    e.preventDefault();\n    const newItem = {\n      id: currentSelected.id,\n      title: editTitle,\n      content: editContent,\n      date: currentSelected.date,\n    };\n\n    if (!sanitizeInput(editTitle)) {\n      alert.show(\"Please enter note title  \");\n      return;\n    }\n    const selectedItem = items.find((ele) => ele.id === newItem.id);\n    let index = items.indexOf(selectedItem);\n    items[index] = newItem;\n    const newitem = [...items];\n    setItems(newitem);\n    setEditTitle(\"\");\n    setEditContent(\"\");\n    var key = date.getDate().toString();\n    AllNotes[key] = newitem;\n    setAllnotes(AllNotes);\n  }\n\n  function onEdithandler(item) {\n    setClassname(\"col-sm-6\");\n    const { content, title } = item;\n    setEditContent(content);\n    setEditTitle(title);\n    setCurrentSelected(item);\n    executeScroll();\n  }\n\n  function onDeleteHandler(item) {\n    const newArray = items.filter((i) => item.id !== i.id);\n    setItems(newArray);\n    var key = date.getDate().toString();\n    AllNotes[key] = newArray;\n    setAllnotes(AllNotes);\n    localStorage.setItem(\"allnotes\", JSON.stringify(AllNotes));\n  }\n\n  const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\n  const myRef = useRef(null);\n  const executeScroll = () => scrollToRef(myRef);\n  return (\n    <div className=\"container\">\n      <div style={{ borderBottom: \"1px solid black\", marginBottom: \"1.5%\" }}>\n        <h1 className=\"App\">Notes App</h1>\n      </div>\n      <div className=\"row\" style={{ height: \"50%\" }}>\n        <div className=\"col-sm-6\">\n          <MyCalender date={date} onChange={ondateChange} />\n        </div>\n        <div\n          className=\"col-sm-6 App\"\n          style={{ height: \"20em\", overflow: \"scroll\" }}\n        >\n          <TodoList\n            items={items}\n            onEdithandler={onEdithandler}\n            onDeleteHandler={onDeleteHandler}\n          />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <Addnoteform\n            type=\"Add New Note\"\n            title={title}\n            content={content}\n            onTitlechange={onTitlechange}\n            onContentchange={onContentchange}\n            onSavehandler={onSaveHandler}\n            ondiscartHandler={ondiscartHandler}\n          />\n        </div>\n        <div className={classname} ref={myRef}>\n          <Addnoteform\n            type=\"Edit Note\"\n            title={editTitle}\n            content={editContent}\n            onTitlechange={onEditTitleChange}\n            onContentchange={onEditContentChange}\n            onSavehandler={onEditSavehandler}\n            ondiscartHandler={onEditDiscartHandler}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}